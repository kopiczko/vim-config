snippet $ "${var}"
${${1:var}}$0
endsnippet

snippet var "${var}"
${${1:var}}$0
endsnippet

snippet top "shebang + set" b
#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail
endsnippet

snippet shebang "shebang" b
#!/usr/bin/env bash
endsnippet

snippet modeline "add bash modeline" b
# ex: ts=4 sw=4 et ft=sh
endsnippet

snippet dir "script directory" b
readonly dir=\$( cd "\$( dirname "\${BASH_SOURCE[0]}" )" && pwd )
endsnippet

snippet toplevel "topleve dir" b
git rev-parse --show-toplevel >/dev/null || exit 1
readonly toplevel=\$( git rev-parse --show-toplevel )
endsnippet

snippet bold "bold() function" b
bold() {
    echo "\$(tput bold)\$1\$(tput sgr0)"
}
endsnippet

snippet func "function name()" b
function $1() {
    bold "===> ${FUNCNAME[0]} $@"

    $0
}
endsnippet

snippet setx "set -x" b
set -x
$0
{ set +x; } 2>/dev/null
endsnippet

snippet mktemp "mktemp" b
tmp=$(mktemp "\${TMPDIR:-"/tmp"}/${1:file}.XXXXXXXX.${2:txt}")
$0
endsnippet

snippet case "script directory" b
case ${1:var} in
[1-6]*)
    $0
    ;;
9[1-8])
    ;;
*)
  ;;
esac
endsnippet

snippet echoerr "echo ... >&2"
echo "error: $0" >&2
endsnippet

snippet flags "handling flags example" b
aflag=no
bflag=no

while [ \$# -gt 0 ] ; do
    case "\$1" in
    -a) aflag=yes ;;
    -b) bflag=yes ;;
    -f) flist="\$flist \${2:-""}" ; shift ;;
    --single) single="\${2:-""}" ; shift ;;
    --) shift ; break ;;
    -*) echo "unrecognised option \$1" 1>&2 ; exit 1 ;;
    *)  break ;;
    esac
    shift
done
endsnippet

snippet ostype "detect os type" b
set os
case \$OSTYPE in
    darwin*) os="darwin" ;;
    linux*) os="linux" ;;
    *) echo "ERROR unsuported OS \$OSTYPE" >&2 ; exit 1 ;;
esac
endsnippet

snippet iferr "if [[ $? -ne 0 ]]" b
local ret=$?
if [[ $ret -ne 0 ]] ; then
    echo "error: $0" >&2
    return $ret
fi
endsnippet

snippet ifflagempty "if [[ -z ${value} ]]" b
if [[ -z \${$1} ]]; then
    echo "error: --${1/_/-/g} not set" >&2
    exit 1
fi
endsnippet

snippet forarr "for element in ${elements[@]}"
$1s=("value1" "value2")

for $1 in ${$1s[@]}
do
    $0
done
endsnippet
